private async Task<string> CaptureRequestInfoAsync(HttpRequest request)
{
    try
    {
        request.EnableBuffering(); // Permite leer el cuerpo sin afectar la solicitud
        string requestBody = await ReadRequestBodyAsync(request);
        request.Body.Seek(0, SeekOrigin.Begin);

        return LogFormatter.FormatRequestInfo(request.Method, request.Path, request.QueryString.ToString(), requestBody);
    }
    catch (Exception ex)
    {
        _loggingService.AddExceptionLog(ex);
        return "Error al capturar el request.";
    }
}


private async Task<string> CaptureResponseInfoAsync(HttpResponse response)
{
    try
    {
        string responseBody = await ReadResponseBodyAsync(response);
        return LogFormatter.FormatResponseInfo(response.StatusCode, responseBody);
    }
    catch (Exception ex)
    {
        _loggingService.AddExceptionLog(ex);
        return "Error al capturar el response.";
    }
}

