public async Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next)
{
    var executionId = context.HttpContext.Items["ExecutionId"]?.ToString() ?? "Sin ExecutionId";
    var controllerName = context.Controller.GetType().Name;
    var actionName = context.ActionDescriptor.DisplayName;
    var methodFullName = $"{controllerName}.{actionName}";

    var inputParams = _loggingService.CaptureMethodInput(context.ActionArguments);

    _loggingService.AddLogEntry(_loggingService.FormatMethodEntry(methodFullName, inputParams, executionId));

    var executedContext = await next();  // Continuar la ejecución del método

    if (executedContext.Exception == null)
    {
        var returnValue = executedContext.Result?.ToString() ?? "Sin retorno (void)";
        _loggingService.AddLogEntry(_loggingService.FormatMethodExit(methodFullName, returnValue, executionId));
    }
    else
    {
        _loggingService.AddLogEntry(_loggingService.FormatExceptionDetails(executedContext.Exception, executionId));
    }
}
