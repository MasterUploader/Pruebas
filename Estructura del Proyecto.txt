using System;
using System.Threading;

namespace Logging.Helpers
{
    /// <summary>
    /// Permite crear un scope de logging anidado para mantener la jerarquía del flujo de ejecución.
    /// Utiliza AsyncLocal para mantener el nivel de indentación en operaciones asíncronas.
    /// </summary>
    public sealed class LogScope : IDisposable
    {
        private static readonly AsyncLocal<int> _currentLevel = new AsyncLocal<int>();

        /// <summary>
        /// Obtiene el nivel actual de indentación.
        /// </summary>
        public static int CurrentLevel
        {
            get => _currentLevel.Value;
            private set => _currentLevel.Value = value;
        }

        /// <summary>
        /// Al instanciar un LogScope se incrementa el nivel actual.
        /// </summary>
        public LogScope()
        {
            CurrentLevel += 1;
        }

        /// <summary>
        /// Al finalizar el scope se decrementa el nivel actual.
        /// </summary>
        public void Dispose()
        {
            CurrentLevel -= 1;
        }
    }
}
