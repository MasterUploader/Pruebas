public static string FormatJson(string json)
{
    try
    {
        using var jsonDoc = JsonDocument.Parse(json);
        string formattedJson = JsonSerializer.Serialize(jsonDoc, new JsonSerializerOptions
        {
            WriteIndented = true,  
            Encoder = System.Text.Encodings.Web.JavaScriptEncoder.UnsafeRelaxedJsonEscaping
        });

        // üîπ Agregar indentaci√≥n a cada l√≠nea para que se vea correctamente alineado en los logs
        string indent = "    "; // Cuatro espacios para alinear correctamente dentro del log
        return Environment.NewLine + string.Join(Environment.NewLine, 
            formattedJson.Split(Environment.NewLine)
                         .Select(line => indent + line));
    }
    catch
    {
        return json; // Si el JSON no es v√°lido, devuelve el contenido original
    }
}
