public static string FormatJson(string json)
{
    try
    {
        using var jsonDoc = JsonDocument.Parse(json);
        string formattedJson = JsonSerializer.Serialize(jsonDoc, new JsonSerializerOptions
        {
            WriteIndented = true,  
            Encoder = System.Text.Encodings.Web.JavaScriptEncoder.UnsafeRelaxedJsonEscaping
        });

        // ðŸ”¹ Asegurar correcta indentaciÃ³n en cada lÃ­nea del JSON
        string indent = "    "; // Define la cantidad de espacios para indentar
        return string.Join(Environment.NewLine, formattedJson.Split(Environment.NewLine).Select(line => indent + line));
    }
    catch
    {
        return json; // Devuelve el JSON original si hay un error
    }
}
