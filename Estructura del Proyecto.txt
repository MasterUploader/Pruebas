public static string FormatJson(string json, int indentationLevel = 8)
{
    try
    {
        using var jsonDoc = JsonDocument.Parse(json);
        string formattedJson = JsonSerializer.Serialize(jsonDoc, new JsonSerializerOptions
        {
            WriteIndented = true,
            Encoder = System.Text.Encodings.Web.JavaScriptEncoder.UnsafeRelaxedJsonEscaping
        });

        string indent = new string(' ', indentationLevel); // Espacios de indentaci√≥n
        
        // üîπ Alinear la primera l√≠nea correctamente
        string[] lines = formattedJson.Split(Environment.NewLine);
        lines[0] = indent + lines[0]; // La primera l√≠nea lleva indentaci√≥n manual
        for (int i = 1; i < lines.Length; i++)
        {
            lines[i] = indent + lines[i]; // Las siguientes l√≠neas se indentan normalmente
        }

        return Environment.NewLine + string.Join(Environment.NewLine, lines);
    }
    catch
    {
        return json; // Si el JSON no es v√°lido, devuelve el texto original
    }
}
