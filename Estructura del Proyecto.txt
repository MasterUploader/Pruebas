public async Task InvokeAsync(HttpContext context)
{
    string executionId = Guid.NewGuid().ToString();
    string endpoint = context.Request.Path.Value?.Replace("/", "_") ?? "UnknownEndpoint";
    string timestamp = DateTime.UtcNow.ToString("yyyyMMdd_HHmmss");
    string logFileName = Path.Combine(GetLogDirectory(), $"{executionId}_{endpoint}_{timestamp}.txt");

    context.Items["LogFileName"] = logFileName;

    var logBuilder = new StringBuilder();
    logBuilder.AppendLine(LogFormatter.FormatBeginLog());
    logBuilder.AppendLine(CaptureEnvironmentInfo(context, executionId));
    logBuilder.AppendLine(await CaptureRequestInfoAsync(context.Request));

    var originalBodyStream = context.Response.Body;
    using var responseBodyStream = new MemoryStream();
    context.Response.Body = responseBodyStream;

    try
    {
        await _next(context);
        logBuilder.AppendLine(await CaptureResponseInfoAsync(context.Response));
    }
    catch (Exception ex)
    {
        _loggingService.AddExceptionLog(ex);
    }
    finally
    {
        logBuilder.AppendLine(LogFormatter.FormatEndLog());
        await File.WriteAllTextAsync(logFileName, logBuilder.ToString());

        responseBodyStream.Seek(0, SeekOrigin.Begin);
        await responseBodyStream.CopyToAsync(originalBodyStream); // Restaurar el Body original
    }
}
